{"version":3,"sources":["utils.js","BooksAPI.js","context/BooksContext.js","components/BookOptionsButton.js","components/Book.js","components/Shelf.js","screens/MainScreen.js","screens/SearchScreen.js","App.js","index.js"],"names":["getBooksShelfs","books","a","item","shelfs","indexOf","shelf","push","map","itemShelfs","filter","itemBooks","arrayToText","array","length","toString","replace","api","token","localStorage","Math","random","substr","headers","getAll","fetch","then","res","json","data","update","id","method","body","JSON","stringify","defaultValue","booksShelf","refreshBooks","setBooks","setBooksShelf","setState","refresh","getAllBooks","BooksContext","createContext","BooksContextProvider","children","useState","state","v","pv","React","useEffect","forced","listAllBooks","Provider","value","initialState","reducer","action","type","payload","Error","BookOptionsButton","bookID","bookShelf","useReducer","dispatch","booksContext","useContext","onSelect","event","target","className","onChange","disabled","memo","Book","title","author","image","style","width","height","backgroundImage","Shelf","shelfName","index","authors","imageLinks","thumbnail","MainScreen","to","searchText","searchedBooks","SearchScreen","props","isMounting","bookSearchShelfs","search","toLowerCase","idBooks","searchResults","query","bookSearch","searchBooks","placeholder","BooksApp","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af2461ef.chunk.js","sourcesContent":["export const getBooksShelfs=async (books)=>{\n  let shelfs=[]\n\n  for(let item in books){\n    if(shelfs.indexOf(books[item].shelf)===-1){\n      shelfs.push(books[item].shelf)\n    }\n  }\n\n  return shelfs.map((itemShelfs)=>(\n    books.filter((itemBooks)=>itemShelfs===itemBooks.shelf)\n  ))\n}\n\nexport const arrayToText = (array)=> (typeof array!=='undefined' && array.length>0)?array.toString().replace(',',' and '):'uknown author'","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (id, shelf) =>\n  fetch(`${api}/books/${id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { createContext, useState } from 'react';\nimport { getBooksShelfs} from '../utils';\nimport { getAll } from '../BooksAPI';\n\nconst defaultValue={\n  booksShelf:[],\n  books:[],\n  refreshBooks:false,\n  setBooks:()=>{},\n  setBooksShelf:()=>{},\n  setState:()=>{},\n  refresh:()=>{},\n  getAllBooks:()=>({books:[],booksShelf:[]}),\n}\n\nexport const BooksContext= createContext(defaultValue);\n\nexport const BooksContextProvider=({children})=>{\n\n  const [state,setState] = useState(defaultValue);\n\n  const {books,booksShelf,refreshBooks} = state;\n\n  const setBooks= (books)=>{\n    setState((pv)=>({...pv,books}))\n  }\n\n  const setBooksShelf= (booksShelf)=>{\n    setState((pv)=>({...pv,booksShelf}))\n  }\n\n  const refresh=(v)=>{\n    setState((pv)=>({...pv,refreshBooks:v}))\n  }\n\n  const getAllBooks=async (forced=true)=>{\n    if(!forced && booksShelf.length>0 && booksShelf.length>0){\n      return {booksShelf,books};\n    }\n    else{\n      const books= await getAll();\n      const booksShelf=await getBooksShelfs(books);\n      setState((pv)=>({...pv,books,booksShelf}))\n      return {booksShelf,books};\n    }\n  }\n\n  React.useEffect(()=>{\n    const listAllBooks=async (forced)=>{\n      if(!forced && booksShelf.length>0 && booksShelf.length>0){\n        return;\n      }\n      else{\n        const books= await getAll();\n        const booksShelf=await getBooksShelfs(books);\n        setState((pv)=>({...pv,books,booksShelf}))\n      }\n    }\n    listAllBooks(refreshBooks) \n    if(refreshBooks){\n      refresh(false);\n    }\n  },[refreshBooks,booksShelf])\n\n  return(\n    <BooksContext.Provider value={{\n      books,\n      booksShelf,\n      setBooks,\n      setBooksShelf,\n      setState,\n      refreshBooks,\n      refresh,\n      getAllBooks\n    }}>\n      {children}\n    </BooksContext.Provider>\n  )\n}","import React, { useContext, useReducer, useEffect } from 'react';\nimport { update } from '../BooksAPI';\nimport { BooksContext } from '../context/BooksContext';\n\nconst initialState={\n    shelf:''\n}\n\nfunction reducer(state, action) {\n    switch (action.type) {\n      case 'changeShelf':\n        return {shelf: action.payload};\n      default:\n        throw new Error();\n    }\n  }\n\nconst BookOptionsButton = ({bookID,bookShelf})=>{\n    const [state,dispatch] = useReducer(reducer, initialState);\n    const {shelf} = state;\n\n    const booksContext= useContext(BooksContext);\n\n    const onSelect = async (event)=>{\n        const {value}=event.target;\n        await update(bookID,value)\n        booksContext.refresh(true);\n        dispatch({type: 'changeShelf', payload: value})\n    }\n\n    useEffect(() => {\n        dispatch({type: 'changeShelf', payload: bookShelf})\n    }, [bookShelf])\n\n    return(\n        <div className=\"book-shelf-changer\">\n          <select onChange={onSelect} value={(typeof shelf!=='undefined')?shelf:'none'}>\n              <option value=\"move\" disabled>Move to...</option>\n              <option value=\"currentlyReading\">Current Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\">Read</option>\n              <option value=\"none\">None</option>\n          </select>\n        </div>\n    )\n}\n\nexport default React.memo(BookOptionsButton);","import React from 'react';\nimport BookOptionsButton from './BookOptionsButton';\n\nconst Book=({bookID,title,author,image, shelf})=>{\n  return(\n    <div className=\"book\">\n      <div className=\"book-top\">\n          <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: `url(${image})` }}/>\n          <BookOptionsButton bookID={bookID} bookShelf={shelf}/>\n      </div>\n      <div className=\"book-title\">{title}</div>\n      <div className=\"book-authors\">{author}</div>\n    </div>\n  )\n}\n\nexport default Book;","import React from 'react';\nimport { arrayToText } from '../utils';\nimport Book from './Book';\n\nconst Shelf= ({shelfName,books})=>{\n  return(\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{shelfName}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {\n            books.map((item,index)=>(\n              <li  key={`book${shelfName}${item?.title}${index}`}>\n                <Book bookID={item.id} shelf={item.shelf} title={item?.title} author={arrayToText(item.authors)} image={item?.imageLinks?.thumbnail} />\n              </li>\n            ))\n          }\n        </ol>\n      </div>\n    </div>\n  )\n}\n\nexport default Shelf;","import React,{useContext} from 'react';\nimport {Link} from 'react-router-dom';\nimport Shelf from '../components/Shelf';\nimport { BooksContext } from '../context/BooksContext';\n\nconst MainScreen= ()=>{\n  const booksContext= useContext(BooksContext);\n\n  const {booksShelf} = booksContext;\n\n  // useEffect(()=>{\n  //   const listAllBooks=async (forced)=>{\n  //     const listBooks=await booksContext.getAllBooks(forced);\n  //     setState((pv)=>({...pv,booksShelf:listBooks.booksShelf,books:listBooks.books}))\n  //   }\n  //   listAllBooks(booksContext.refreshBooks) \n  //   if(booksContext.refreshBooks){\n  //     booksContext.refresh(false);\n  //   }\n  // },[booksContext])\n\n  return(\n    <div className=\"list-books\">\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <div className=\"list-books-content\">\n      {\n        (typeof booksShelf !== 'undefined' && booksShelf.length>0) ? \n        booksShelf.map((item,index)=>(\n          <Shelf key={`shelf${index}`} shelfName={item[0].shelf} books={item}/>\n          ))\n        :\n        <span>Sorry but We don't find any book or shelf in your list</span>\n      }\n      </div>\n      <div className=\"open-search\">\n        <Link to='/search'><button>Add a book</button></Link>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(MainScreen);","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { search } from '../BooksAPI';\nimport { BooksContext } from '../context/BooksContext';\nimport Book from '../components/Book';\nimport { arrayToText } from '../utils';\n\nconst initialState={\n  books:[],\n  searchText:'',\n  searchedBooks:[],\n}\n\nconst SearchScreen = (props) => {\n  const [state,setState] = useState(initialState)\n  const booksContext= useContext(BooksContext);\n\n  const {searchText,searchedBooks} = state;\n  const {books} = booksContext;\n\n  const onHandleSearchText=(event)=>{\n    const searchText=`${event.target.value}`;\n    setState((pv)=>({...pv,searchText}));\n  }\n\n  useEffect(()=>{\n    let isMounting=true;\n    const searchBooks=async ()=>{\n      if(searchText.length>0){\n        const bookSearchShelfs=books.filter((item)=>{\n          const search= searchText.toLowerCase().replace(/[\\\\]/g,'');\n          const title=item.title.toLowerCase();\n          const authors=item?.authors[0].toLowerCase();\n          return (title.search(search)!==-1 || authors.search(search) !==-1);\n        });\n    \n        const idBooks=bookSearchShelfs.map((item)=>(item.id));\n    \n        let searchResults=bookSearchShelfs;\n        search(searchText).then((bookSearch)=>{\n          if(typeof bookSearch!=='undefined' && bookSearch.length>1){\n            searchResults= [...searchResults,...bookSearch].filter((item)=>(\n              !(idBooks.indexOf(item.id) !== -1 && typeof item.shelf ==='undefined')\n            ));\n          }\n          if(isMounting){\n            setState((pv)=>({...pv,searchedBooks:searchResults}));\n          }\n        });\n      }\n    }\n    searchBooks();\n    return(()=>{isMounting=false;})\n  },[searchText,books])\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link to={'/'}><button className=\"close-search\">Close</button></Link>\n        <div className=\"search-books-input-wrapper\">\n          <input type=\"text\" placeholder=\"Search by title or author\" onChange={onHandleSearchText} />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n        {\n          ((typeof searchText!=='undefined' && searchText.length>2) && (typeof searchedBooks!=='undefined' && searchedBooks.length>0)) && (searchedBooks.map((item,index)=>(\n            <li key={`search${item.title}${index}`}>\n              <Book bookID={item.id} title={item.title} author={arrayToText(item?.authors)} shelf={item?.shelf} image={item?.imageLinks?.thumbnail}/>\n            </li>\n          )))\n        }\n        </ol>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(SearchScreen);","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { BooksContextProvider } from './context/BooksContext'\nimport MainScreen from './screens/MainScreen'\nimport SearchScreen from './screens/SearchScreen'\n\nconst BooksApp = ()=>{\n\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <BooksContextProvider>\n          <Route path={'/search'} component={SearchScreen}/>\n          <Route path={'/reactnd-project-myreads-starter'} component={MainScreen}/>\n          <Route exact path={'/'} component={MainScreen}/>\n        </BooksContextProvider>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}